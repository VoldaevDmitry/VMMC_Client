//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VMMC_Core.FileGetterServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFileResult", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibraryTest")]
    [System.SerializableAttribute()]
    public partial class GetFileResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGetSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGetSuccess {
            get {
                return this.IsGetSuccessField;
            }
            set {
                if ((this.IsGetSuccessField.Equals(value) != true)) {
                    this.IsGetSuccessField = value;
                    this.RaisePropertyChanged("IsGetSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileGetterServiceReference.IFileGetterService")]
    public interface IFileGetterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileGetterService/GetFile", ReplyAction="http://tempuri.org/IFileGetterService/GetFileResponse")]
        VMMC_Core.FileGetterServiceReference.GetFileResult GetFile(int fileId, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileGetterService/GetFile", ReplyAction="http://tempuri.org/IFileGetterService/GetFileResponse")]
        System.Threading.Tasks.Task<VMMC_Core.FileGetterServiceReference.GetFileResult> GetFileAsync(int fileId, string projectName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileGetterServiceChannel : VMMC_Core.FileGetterServiceReference.IFileGetterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileGetterServiceClient : System.ServiceModel.ClientBase<VMMC_Core.FileGetterServiceReference.IFileGetterService>, VMMC_Core.FileGetterServiceReference.IFileGetterService {
        
        public FileGetterServiceClient() {
        }
        
        public FileGetterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileGetterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileGetterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileGetterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VMMC_Core.FileGetterServiceReference.GetFileResult GetFile(int fileId, string projectName) {
            return base.Channel.GetFile(fileId, projectName);
        }
        
        public System.Threading.Tasks.Task<VMMC_Core.FileGetterServiceReference.GetFileResult> GetFileAsync(int fileId, string projectName) {
            return base.Channel.GetFileAsync(fileId, projectName);
        }
    }
}
